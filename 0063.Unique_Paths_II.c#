public class Solution {
    public int UniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.Length;
        int n = obstacleGrid[0].Length;
        int[][] paths = new int[m][];
        for(int i=0; i<m; i++)
        {
            paths[i] = new int[n];
        }
        if(obstacleGrid[0][0]==1)
            return 0;
        
        paths[0][0] = 1;
        for(int i=0; i<m; i++)
        {
            if(obstacleGrid[i][0]==0)
            {
                paths[i][0] = 1;
            }
            else
            {
                break;
            }
        }
        for(int j=0;j<n;j++)
        {
            if(obstacleGrid[0][j]==0)
            {
                paths[0][j] = 1;
            }
            else
            {
                break;
            }
        }
        for(int i=1; i<m; i++)
        {
            for(int j=1;j<n;j++)
            {
                if(obstacleGrid[i][j]!=1)
                {
                    paths[i][j] =  paths[i-1][j] + paths[i][j-1];
                }
                
            }
        }
         for(int i=0; i<m; i++)
        {
            for(int j=0;j<n;j++)
            {
                Console.Write(" {0}",paths[i][j]);
            }
             Console.WriteLine();
         }
        return paths[m-1][n-1];
    }
}
